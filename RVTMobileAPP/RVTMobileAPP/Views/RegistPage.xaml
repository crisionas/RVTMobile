<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviours="clr-namespace:RVTMobileAPP.Helpers.Behaviours;assembly=RVTMobileAPP"
             xmlns:converters="clr-namespace:RVTMobileAPP.Helpers.Converters;assembly=RVTMobileAPP"
             x:Class="RVTMobileAPP.Views.RegistPage"
             Title="RVT | Înregistrare">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <ScrollView>
            <StackLayout Padding="30" VerticalOptions="CenterAndExpand" >
                <Label Text="Înregistrare" Style="{StaticResource TitleStyle}"/>
                <Image Source="ic_registration.png" WidthRequest="100" HeightRequest="100"/>
               
                <!--Name-->
                <Entry Text="{Binding Name.Value}" 
                       Placeholder="Nume">
                    <Entry.Behaviors>
                        <behaviours:EntryLineValidationBehaviour IsValid="{Binding Name.IsValid}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{Binding Name.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Name.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>
                <!--Surname-->
                <Entry Text="{Binding Surname.Value}" 
                       Placeholder="Prenume">
                    <Entry.Behaviors>
                        <behaviours:EntryLineValidationBehaviour IsValid="{Binding Surname.IsValid}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{Binding Surname.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Surname.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>

                <!--Gender-->
                <Picker Title="Sexul"
                        SelectedItem="{Binding Gender.Value}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Masculin</x:String>
                            <x:String>Feminin</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
                <Label Text="{Binding Gender.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Gender.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>


                <!--Birthday-->
                <Label Text="Data nașterii" Margin="5"/>
                <DatePicker Date="{Binding Birth_date.Value}"/>
                <Label Text="{Binding Birth_date.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Birth_date.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>


                <!--IDNP-->
                <Entry Text="{Binding IDNP.Value}"
                       MaxLength="13"
                       Placeholder="IDNP">
                    <Entry.Behaviors>
                        <behaviours:EntryLineValidationBehaviour IsValid="{Binding IDNP.IsValid}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{Binding IDNP.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding IDNP.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>
                

                <!--Phone Number-->
                <Entry Text="{Binding Number.Value}"
                       MaxLength="10"
                       Placeholder="Numărul de telefon">
                    <Entry.Behaviors>
                        <behaviours:EntryLineValidationBehaviour IsValid="{Binding Number.IsValid}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{Binding Number.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Number.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>


                <!--Email-->
                <Entry Text="{Binding Email.Value}"
                       Placeholder="Email">
                    <Entry.Behaviors>
                        <behaviours:EntryLineValidationBehaviour IsValid="{Binding Email.IsValid}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Email.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>


                <!--Region-->
                <Picker Title="Domiciliu"
                        SelectedItem="{Binding Region.Value}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Municipiul Chișinău</x:String>
                            <x:String>Municipiul Bălți</x:String>
                            <x:String>Municipiul Bender (Tighina)</x:String>
                            <x:String>Anenii Noi</x:String>
                            <x:String>Basarabeasca</x:String>
                            <x:String>Briceni</x:String>
                            <x:String>Cahul</x:String>
                            <x:String>Camenca</x:String>
                            <x:String>Călărași</x:String>
                            <x:String>Cantemir</x:String>
                            <x:String>Căușeni</x:String>
                            <x:String>Cimișlia</x:String>
                            <x:String>Criuleni</x:String>
                            <x:String>Dondușeni</x:String>
                            <x:String>Drochia</x:String>
                            <x:String>Dubăsari</x:String>
                            <x:String>Edineț</x:String>
                            <x:String>Fălești</x:String>
                            <x:String>Florești</x:String>
                            <x:String>Glodeni</x:String>
                            <x:String>Hîncești</x:String>
                            <x:String>Ialoveni</x:String>
                            <x:String>Leova</x:String>
                            <x:String>Nisporeni</x:String>
                            <x:String>Ocnița</x:String>
                            <x:String>Orhei</x:String>
                            <x:String>Rezina</x:String>
                            <x:String>Rîșcani</x:String>
                            <x:String>Sîngerei</x:String>
                            <x:String>Soroca</x:String>
                            <x:String>Strășeni</x:String>
                            <x:String>Șoldănești</x:String>
                            <x:String>Ștefan Vodă</x:String>
                            <x:String>Taraclia</x:String>
                            <x:String>Telenești</x:String>
                            <x:String>Ungheni</x:String>
                            <x:String>Unitatea Teritorială Autonomă Găgăuzia</x:String>
                            <x:String>Unitățile Administrativ-Teritoriale din Stînga Nistrului.</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
                <Label Text="{Binding Region.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding Region.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>


                <!--Terms And Condition-->
                <StackLayout Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding TermsAndCondition.Value}"/>
                    <Label Text="Sunt de acord cu termenii și condițiile"
                           VerticalOptions="Center"/>
                </StackLayout>

                <Label Text="{Binding TermsAndCondition.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding TermsAndCondition.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ErrorTextStyle}"/>

                <!--BUTTON-->
                <StackLayout Padding="30" Spacing="0">
                    <Button Text="ÎNREGISTRARE" Command="{Binding SignUpCommand}"/>
                </StackLayout>


            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>